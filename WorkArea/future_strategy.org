* KDJ 指标                                                        :GUOJIAWEI:
** 定义
   根据统计学原理，通过一个特定周期 （常为9日、9周等） 内出现过的最高价、最低价及最后一个计算周期的
   收盘价及这三者之间的比例关系，来计算最后一个计算周期的未成熟随机值 =RSV=, 然后根据平滑移动平均线
   的方法来计算 K 值、D 值与 J 值，并绘成曲线图来研判股票走势。
** 计算方法
   KDJ的计算比较复杂，首先要计算周期（n日、n周等）的 =RSV= 值，即未成熟随机指标值，然后再计算K值、
   D值、J值等。以n日 =KDJ= 数值的计算为例，其计算公式为
   #+BEGIN_EXAMPLE
     n日RSV=（Cn－Ln）/（Hn－Ln）×100
   #+END_EXAMPLE
   公式中，Cn 为第n日收盘价；Ln 为n日内的最低价；Hn 为n日内的最高价。
   其次，计算K值与D值：
   #+BEGIN_EXAMPLE
     当日K值=2/3×前一日K值+1/3×当日RSV
     当日D值=2/3×前一日D值+1/3×当日K值
     若无前一日K 值与D值，则可分别用50来代替。
     J值=3*当日K值-2*当日D值
   #+END_EXAMPLE
   以9日为周期的KD线为例，即未成熟随机值，计算公式为
   #+BEGIN_EXAMPLE
     9日RSV=（C－L9）÷（H9－L9）×100
   #+END_EXAMPLE
   公式中，C为第9日的收盘价；L9为9日内的最低价；H9为9日内的最高价。
   K值=2/3×第8日K值+1/3×第9日RSV
   D值=2/3×第8日D值+1/3×第9日K值
   J值=3*第9日K值-2*第9日D值若无前一日K
   值与D值，则可以分别用50代替。
** 逻辑说明
   =KDJ= 指标反应比较敏感快速，是一种进行 *中短期* 趋势波段分析研判的较佳的技术指标。一般对做 *大资金*
   *大波段* 的人来说，一般当月 =KDJ= 值在低位时逐步进场吸纳；主力平时运作时偏重周 =KDJ= 所处位置，对
   中线波段的循环高低点作出研判结果，所以往往出现单边式造成日KDJ线的屡屡钝化现象；日KDJ线对股价变化方
   向反应极为敏感，是日常买卖进出的重要方法；对于做小波段的短线客来说，30分钟和60分钟 =KDJ= 线又是重
   要的参考指标；对于已指定买卖计划即刻下单的投资者，5分钟和15分钟 =KDJ= 可以提供最佳的进出时间。
** TB源码
   #+BEGIN_EXAMPLE
     Params
         Numeric Length(14);
         Numeric SlowLength(3);
         Numeric SmoothLength(3);
     Vars
         NumericSeries HighestValue;
         NumericSeries LowestValue;
         BoolSeries condBuy(false);
         BoolSeries condSell(false);
         NumericSeries KValue;
         Numeric SumHLValue;
         Numeric SumCLValue;
         Numeric DValue;
         Numeric JValue;
     Begin
         If(!CallAuctionFilter()) Return;
         HighestValue = HighestFC(High, Length);
         LowestValue = LowestFC(Low, Length);
         SumHLValue = SummationFC(HighestValue-LowestValue,SlowLength);
         SumCLValue = SummationFC(Close - LowestValue,SlowLength);
         If(SumHLValue <> 0)
         {
             KValue = SumCLValue/SumHLValue*100;
         }Else
         {
             KValue = 0;
         }
         DValue = AverageFC(KValue,SmoothLength);
         JValue = 3*KValue-2*DValue;

         condBuy = CrossOver(JValue,20) || CrossOver(KValue,DValue);
         condSell = CrossUnder(JValue,90) || CrossUnder(KValue,DValue);

         If(MarketPosition<>1 && condBuy[1]==true)
         Buy(1,Open);
         If(MarketPosition<>-1 && condSell[1]==true)
         SellShort(1,Open);

     End
   #+END_EXAMPLE
